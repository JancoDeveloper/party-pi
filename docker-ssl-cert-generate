#! /bin/bash
set -e
echo 01 > ca.srl
openssl genrsa -out ca-key.pem

cat << CNF > ca.cnf
req_extensions = v3_req
[ req ]
distinguished_name     = req_distinguished_name
[ req_distinguished_name ]
 countryName                    = United States
 countryName_default            = US
 countryName_min                = 2
 countryName_max                = 2
 localityName                   = Locality Name (eg, city)
 localityName_default           = Palo Alto
 organizationalUnitName         = Organizational Unit Name (eg, section)
 organizationalUnitName_default = Self publish
 commonName                     = Justin Shenk
 commonName_max                 = 64
 commonName_default             = *
 emailAddress                   = Email Address
 emailAddress_max               = 40
 emailAddress_default           = no-reply.self-signed@localhost
[ v3_req ]
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
subjectAltName=critical,email:no-reply.self-signed@localhost,DNS:localhost
[dir_sect]
C=US
O=My Example Organization
OU=My Example Unit
CN=Name
CNF

openssl req -new -x509 -days 365 -batch -subject -key ca-key.pem -config ca.cnf -out ca.pem

openssl genrsa -out server-key.pem
openssl req -new -batch -config ca.cnf -key server-key.pem -out server.csr

openssl x509 -req -days 365 -in server.csr -CA ca.pem -CAkey ca-key.pem -out server-cert.pem

openssl genrsa -out client-key.pem
openssl req -new -batch -key client-key.pem -out client.csr

echo extendedKeyUsage = clientAuth > extfile.cnf

openssl x509 -req -days 365 -in client.csr -CA ca.pem -CAkey ca-key.pem -out client-cert.pem -extfile extfile.cnf

openssl rsa -in server-key.pem -out server-key.pem
openssl rsa -in client-key.pem -out client-key.pem
